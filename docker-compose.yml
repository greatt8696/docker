version: '3.8'

services:

  webserver:
    container_name: webserver
    build: 
      context: webserver
      dockerfile: ./Dockerfile 

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    restart: always
    command: redis-server /usr/local/conf/redis.conf
    volumes:
      - ./redis/data/:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf

  

  mongo1:
    image: mongo:latest
    hostname: mongo1
    container_name: mongo1
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root!
    ports:
      - 27017:27017
    volumes:
      - ./mongodb/data/db/replica/mongo1:/data/db
      - ./mongodb/etc/mongodb.key:/etc/mongodb.key 
    command:
      - '--replSet'
      - 'myReplicaSet'
      - '--keyFile'
      - '/etc/mongodb.key'
      - '--bind_ip_all'
  mongo2:
    image: mongo:latest
    hostname: mongo2
    container_name: mongo2
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root!
    depends_on:
      - mongo1
    ports:
      - 27018:27017
    volumes:
      - ./mongodb/data/db/replica/mongo2:/data/db
      - ./mongodb/etc/mongodb.key:/etc/mongodb.key 
    command:
      - '--replSet'
      - 'myReplicaSet'
      - '--keyFile'
      - '/etc/mongodb.key'
      - '--bind_ip_all'
  mongo3:
    image: mongo:latest
    hostname: mongo3
    container_name: mongo3
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root!
    depends_on:
      - mongo2
    ports:
      - 27019:27017
    volumes:
      - ./mongodb/data/db/replica/mongo3:/data/db
      - ./mongodb/etc/mongodb.key:/etc/mongodb.key 
    command:
      - '--replSet'
      - 'myReplicaSet'
      - '--keyFile'
      - '/etc/mongodb.key'
      - '--bind_ip_all'
networks:
  default:
    name: mongoCluster
